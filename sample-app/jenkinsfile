pipeline {
  agent any

  environment {
    REPO = 'git@github.com:vathsa-ponnappa/devops-basics.git'
    BRANCH = 'main'
  }

  stages {
    stage('Checkout') {
      steps {
        echo "-> Checking out ${env.REPO} (branch: ${env.BRANCH})"
        // Checkout repo (whole repo, including sample-app folder)
        git url: "${env.REPO}", branch: "${env.BRANCH}"
        dir('sample-app') {
          echo "Inside sample-app directory"
        }
      }
    }

stage('Build') {
  steps {
    dir('sample-app') {
      echo 'Building the Python sample app...'
      // Use py -3 if available, otherwise print helpful message and exit non-fatally
      bat """
      where python >nul 2>&1 && (
        python --version
      ) || (
        where py >nul 2>&1 && py -3 --version || (
          echo Python not found on PATH. Skipping build and tests.
          exit /b 0
        )
      )
      """
    }
  }
}

stage('Test') {
  steps {
    dir('sample-app') {
      echo 'Running tests (if pytest installed)...'
      bat '''
      where python >nul 2>&1 && (
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt || echo "pip install returned non-zero"
        python -m pytest
        set rc=%ERRORLEVEL%
        if %rc%==5 (
          echo No tests collected (pytest exit code 5). Treating as success.
          exit /b 0
        ) else if %rc% NEQ 0 (
          echo pytest failed with exit code %rc%.
          exit /b %rc%
        )
      ) || (
        where py >nul 2>&1 && (
          py -3 -m pip install --upgrade pip
          py -3 -m pip install -r requirements.txt || echo "pip install returned non-zero"
          py -3 -m pytest
          set rc=%ERRORLEVEL%
          if %rc%==5 (
            echo No tests collected (pytest exit code 5). Treating as success.
            exit /b 0
          ) else if %rc% NEQ 0 (
            echo pytest failed with exit code %rc%.
            exit /b %rc%
          )
        ) || (
          echo "No python launcher found, skipping tests"
        )
      )
      '''
    }
  }
}
    stage('Deploy') {
      steps {
        dir('sample-app') {
          echo 'Simulating deployment...'
          bat 'echo Deployment successful!'
        }
      }
    }
  }

  post {
    success {
      echo '✅ Pipeline finished successfully!'
    }
    failure {
      echo '❌ Pipeline failed! Check console logs.'
    }
  }
}
